#!/bin/zsh
# vim: set foldmarker={{,}} foldlevel=1 foldmethod=marker:
#===================================================================================
#                 .__
#  ________  _____|  |_________   ____
#  \___   / /  ___/  |  \_  __ \_/ ___\
#   /    /  \___ \|   Y  \  | \/\  \___
#  /_____ \/____  >___|  /__|    \___  >
#        \/     \/     \/            \/
#===================================================================================
#

# General Settings {{
#
DOTFILES=$HOME/dotfiles
#-------------------------------------------------------------------------------
# Autoload colors and tab completion
#-------------------------------------------------------------------------------
autoload -U colors && colors
autoload -U compinit
compinit -C

#-------------------------------------------------------------------------------
# Modify default zsh directory coloring on ls commands
#-------------------------------------------------------------------------------
export LSCOLORS=gxfxcxdxbxegedabagacad

#-------------------------------------------------------------------------------
# case-insensitive (all),partial-word and then substring completion
#-------------------------------------------------------------------------------
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

#-------------------------------------------------------------------------------
# Local array variable
#-------------------------------------------------------------------------------
local -a precmd_functions

#-------------------------------------------------------------------------------
# Set the desired setup options man zshoptions
#-------------------------------------------------------------------------------
setopt  auto_cd
setopt  auto_pushd
setopt  noclobber
setopt  complete_aliases
setopt  extended_glob
setopt  hist_ignore_all_dups
setopt  hist_ignore_space
setopt  share_history
setopt  noflowcontrol
setopt  list_types
setopt  mark_dirs
setopt  path_dirs
setopt  prompt_percent
setopt  prompt_subst

export EDITOR="vi"

#-------------------------------------------------------------------------------
# History settings
#-------------------------------------------------------------------------------
HISTFILE=$HOME/.zsh_history
HISTFILESIZE=65536
HISTSIZE=4096
SAVEHIST=4096
REPORTTIME=60

#-------------------------------------------------------------------------------
# utf-8 in the terminal, will break stuff if your term isn't utf aware
#-------------------------------------------------------------------------------
export LANG=en_US.UTF-8
export LC_ALL=$LANG
export LC_COLLATE=C

#-------------------------------------------------------------------------------
# Set grepoptions
#-------------------------------------------------------------------------------
export GREP_OPTIONS='--color=auto'

#-------------------------------------------------------------------------------
# Alows Mac to use the correct ctags, old version installed by default
#-------------------------------------------------------------------------------
PATH="/usr/local/bin:$PATH"

#-------------------------------------------------------------------------------
# Editor and display configurations
#-------------------------------------------------------------------------------
export GIT_EDITOR='vim'
export LESS='-imJMWR'
export PAGER="less $LESS"
export MANPAGER=$PAGER
export GIT_PAGER=$PAGER
export BROWSER='chromium-browser'

#-------------------------------------------------------------------------------
# Silence Wine debugging output
#-------------------------------------------------------------------------------
export WINEDEBUG=-all

#-------------------------------------------------------------------------------
# Specify virtualenv directories
#-------------------------------------------------------------------------------
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/VirtualDevEnvs

#-------------------------------------------------------------------------------
#
#-------------------------------------------------------------------------------
zstyle ':completion:*' list-colors "$LS_COLORS"
zstyle -e ':completion:*:(ssh|scp|sshfs|ping|telnet|nc|rsync):*' hosts '
    reply=( ${=${${(M)${(f)"$(<~/.ssh/config)"}:#Host*}#Host }:#*\**} )'

# }}

# Key Bindings {{
#-------------------------------------------------------------------------------
# Set emacs like key bindings
#-------------------------------------------------------------------------------
bindkey '^b' backward-word
bindkey '^f' forward-word
bindkey '^R' history-incremental-search-backward
bindkey '^R' history-incremental-pattern-search-backward
bindkey '^?' backward-delete-char
bindkey '^H' backward-delete-char
# }}

#  Aliases {{
#-------------------------------------------------------------------------------
alias vim='nvim'
alias vi='vim'
alias ls='ls -aFHG'
alias ll='ls -alh'
alias la='ls -la'
alias l='ls -lah'
alias lls='ll -Sr'
alias less='less -imJMW'
alias update='brew update && brew upgrade'
alias upgrade='brew upgrade'
alias clean='brew doctor'
alias root_trash='sudo bash -c "exec rm -r /root/.local/share/Trash/{files,info}/*"'
alias tmux="TERM=screen-256color-bce tmux"  # Fix tmux making vim colors funky
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ping='ping -c 5'
alias ad='add_current_directory_to_path'
if [[ -d /Applications/MacVim.app/Contents/MacOS/ ]]; then
    alias vim=/Applications/MacVim.app/Contents/MacOS/vim
fi
alias startdb='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias stopdb='pg_ctl -D /usr/local/var/postgres stop -s -m fast'
alias gs='git status'
alias gd='git diff'
alias ts='tig status'
alias tmuxh='tmux attach -t host-session || tmux new-session -s host-session'
alias tmuxp='tmux attach -t pair-session || tmux new-session -t host-session -s pair-session'
alias rogue='tmux switch-client -t "pair-session"; tmux display-message "Entering Rogue Mode"'
alias buddy='tmux switch-client -t "host-session"; tmux display-message "Entering Buddy Mode"'
alias mux='tmuxinator'

# }}

# Functions {{
#===============================================================================

#-------------------------------------------------------------------------------
#  Python webserver: cd into a directory you want to share and then
#                    type webshare. You will be able to connect to that directory
#                    with other machines on the local net work with IP:8000
#                    the function will display the current machines ip address
#-------------------------------------------------------------------------------
function webshare() {
    local_ip=`hostname -I | cut -d " " -f 1`
    echo "connect to $local_ip:8000"
        python -m SimpleHTTPServer > /dev/null 2>&1
    }

#-------------------------------------------------------------------------------
# A timer function that will say the message and display a pop-up
# after the specified amount of time.
#-------------------------------------------------------------------------------
function workTimer() {
    echo -n "How long to set timer for? (ex. 1h, 10m, 20s, etc) => "; read duration
    echo -n "What to words_to_say when done => "; read words_to_say
    sleep $duration && say "$words_to_say"
}

#-------------------------------------------------------------------------------
# Shows the specified number of the top memory consuming processes and their PID
#-------------------------------------------------------------------------------
function mem_usage() {
    echo -n "How many you what to see? "; read number
    echo ""
    echo "Mem Size       PID     Process"
    echo "============================================================================="
    ps aux | awk '{ output = sprintf("%5d Mb --> %5s --> %s%s%s%s", $6/1024, $2, $11, $12, $13, $14); print output }' | sort -gr | head --line $number
    }

#------------------------------------------------------------------------------
# Because, well I need to spell check a lot :\
#------------------------------------------------------------------------------
spell (){
    echo $1 | aspell -a
}

#--------------------------------------------------------------------
# If we cd into a directory that is named the same as a virtualenv
# auto activate that virtualenv
# -------------------------------------------------------------------
[[ -a /usr/local/share/python/virtualenvwrapper.sh ]] && source /usr/local/share/python/virtualenvwrapper.sh
[[ -a /usr/local/bin/virtualenvwrapper.sh ]] && source /usr/local/bin/virtualenvwrapper.sh

workon_virtualenv() {
  if [[ -d .git ]]; then
     VENV_CUR_DIR="${PWD##*/}"
     if [[ -a ~/.virtualenvs/$VENV_CUR_DIR ]]; then
       deactivate > /dev/null 2>&1
       source ~/.virtualenvs/$VENV_CUR_DIR/bin/activate
     fi
  fi
}

#--------------------------------------------------------------------
# If we cd into a directory that contains a directory named node_modules
# we automatically recursively add it to the $PATH
# -------------------------------------------------------------------
workon_node_env() {
  if [[ -d "node_modules" ]]; then

    export NPM_ORIGINAL_PATH=$PATH
    eval NODE_NAME=$(basename $(pwd))

    for f in `ls $(pwd)/node_modules/`
    do
      export PATH="${PATH}:$(pwd)/node_modules/${f}bin"
    done

    deactivatenode(){
      export PATH=$NPM_ORIGINAL_PATH
      unset -f deactivatenode
      unset NODE_NAME
    }
  fi
}

#--------------------------------------------------------------------
# Run the virtual environments functions for the prompt on each cd
# -------------------------------------------------------------------
cd() {
  builtin cd "$@"
  unset NODE_NAME
  workon_virtualenv
  workon_node_env
}

#--------------------------------------------------------------------
# Search for running processes
# -------------------------------------------------------------------
any() {
    emulate -L zsh
    unsetopt KSH_ARRAYS
    if [[ -z "$1" ]] ; then
        echo "any - grep for process(es) by keyword" >&2
        echo "Usage: any " >&2 ; return 1
    else
        echo "USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND"
        ps xauwww | grep -i --color=auto "[${1[1]}]${1[2,-1]}"
    fi
}

# -------------------------------------------------------------------
# Display a neatly formatted path good for debugging
# -------------------------------------------------------------------
path() {
echo $PATH | tr ":" "\n" | \
    awk "{ sub(\"/usr\",   \"$fg_no_bold[green]/usr$reset_color\"); \
           sub(\"/bin\",   \"$fg_no_bold[blue]/bin$reset_color\"); \
           sub(\"/opt\",   \"$fg_no_bold[cyan]/opt$reset_color\"); \
           sub(\"/sbin\",  \"$fg_no_bold[magenta]/sbin$reset_color\"); \
           sub(\"/local\", \"$fg_no_bold[yellow]/local$reset_color\"); \
           print }"
  }

#--------------------------------------------------------------------
# Displays mounted drive information in a nicely formatted manner
# -------------------------------------------------------------------
function nicemount() {
    (echo "DEVICE PATH TYPE FLAGS" && mount | awk '$2="";1') | column -t ;
}

#--------------------------------------------------------------------
# Add the current working directory to the path
# -------------------------------------------------------------------
add_current_directory_to_path() {
    path+=(`pwd`)
}

# }}

# Precmd functions {{
#------------------------------------------------------------------------------
# Run precmd functions so we get our pimped out prompt
#------------------------------------------------------------------------------
precmd_functions=( precmd_prompt )

# }}

# Add rmv scripts {{
#-------------------------------------------------------------------------------

# }}

# Add pyenv scripts {{
# ------------------------------------------------------------------------------
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="~/.pyenv/shims:$PATH"

eval "$(pyenv init -)"
    
# }}

# EOF

alias chrome="open /Applications/Google\ Chrome.app/ --args --disable-web-security"

#Android stuff
PATH=${PATH}:~/dev/tools/adt-bundle-mac-x86_64-20140702/sdk/platform-tools:~/dev/tools/adt-bundle-mac-x86_64-20140702/sdk/tools

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
PATH=$PATH:/usr/local/sbin

#Pick a Ruby
source ~/.rvm/scripts/rvm
rvm use 2.3.3


#===================================================================================
#               oh-my-zsh config 
#===================================================================================

# Path to your oh-my-zsh installation.
export ZSH=/Users/abarax/.oh-my-zsh

ZSH_CUSTOM=~/.zsh-custom-themes

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="bullet-train"

source $ZSH/oh-my-zsh.sh


# bullet-train config
BULLETTRAIN_VIRTUALENV_FG=black
BULLETTRAIN_RUBY_SHOW=false

#TMUX
DISABLE_AUTO_TITLE=true

# Pyenv Stuff
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

########################
###     FZF Setup
########################

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

export PATH=$DOTFILES/bin:$PATH

source $DOTFILES/zsh/alias.zsh
source $DOTFILES/zsh/functions.zsh
